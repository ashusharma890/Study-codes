import javax.swing.plaf.basic.BasicInternalFrameTitlePane;
import java.util.*;
public class subarr {

     static class queue  //queue class
     {
         static int[] arr;
         static int size;
         static int rear=-1; //initial value of rear always -1 denoting empty queue

         queue(int n) //constructor 
         {
             arr = new int[n];
             this.size = n;
         }

         public static boolean isEmpty(){
             return rear==-1;
         }

         // add element / enqueue
         public static void add(int data) {
             if (rear == size - 1) //checking if queue is already full
             {
                 System.out.println("full queue");
                 return;
             }
             rear++; //adding elements in rear
             arr[rear]=data; //insertion of dara
         }

         //remove element / dequeue
         public static int remove(){
             if (isEmpty()){
                 System.out.println("empty");
                 return -1;
             }
             int front=arr[0]; //front is always the first element of array
             for (int i = 0; i < rear; i++) {
                 arr[i]=arr[i+1]; //shifting elements after deletion
             }
             rear--; //rear value decreases as we shift elements
             return front; //o/p is the elment in front after deletion
         }

         //peek
         public static int peek(){
             if (isEmpty()){
                 System.out.println("empty");
                 return -1;
             }
             return arr[0]; //viewing the element in 0th position as it is the front
         }
     }

    public static void main(String[] args) {
         queue q=new queue(5); //declaring queue in main
         q.add(1);
         q.add(2);
         q.add(3);

         while (!q.isEmpty()){
             System.out.println(q.peek()); //printing queue
             q.remove(); 
         }
     }
}
